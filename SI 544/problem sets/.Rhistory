recov_bed
#ggplot(data = all_countries, mapping = aes(x = mhb, y = nor)) +
# geom_point()
# Type your code here
#beds <- all_countries %>%
#  summarize(maxima_beds = replace_na(max(hosp_beds),0))
#beds
#tot_recov <- all_countries %>%
#  summarize(tots = sum(recovered, na.rm = TRUE))
#tot_recov
#mhb <- max_beds = replace_na(max(all_countries$hosp_beds),0)
#nor <- sum(all_countries$recovered, na.rm = TRUE)
recov_bed <- all_countries %>%
group_by(date)
recov_bed
#ggplot(data = all_countries, mapping = aes(x = mhb, y = nor)) +
# geom_point()
# Type your code here
#beds <- all_countries %>%
#  summarize(maxima_beds = replace_na(max(hosp_beds),0))
#beds
#tot_recov <- all_countries %>%
#  summarize(tots = sum(recovered, na.rm = TRUE))
#tot_recov
#mhb <- max_beds = replace_na(max(all_countries$hosp_beds),0)
#nor <- sum(all_countries$recovered, na.rm = TRUE)
recov_bed <- all_countries %>%
group_by(date, id)
recov_bed
#ggplot(data = all_countries, mapping = aes(x = mhb, y = nor)) +
# geom_point()
# Type your code here
#beds <- all_countries %>%
#  summarize(maxima_beds = replace_na(max(hosp_beds),0))
#beds
#tot_recov <- all_countries %>%
#  summarize(tots = sum(recovered, na.rm = TRUE))
#tot_recov
#mhb <- max_beds = replace_na(max(all_countries$hosp_beds),0)
#nor <- sum(all_countries$recovered, na.rm = TRUE)
recov_bed <- all_countries %>%
group_by(recovered)
recov_bed
#ggplot(data = all_countries, mapping = aes(x = mhb, y = nor)) +
# geom_point()
View(recov_bed)
# Type your code here
#beds <- all_countries %>%
#  summarize(maxima_beds = replace_na(max(hosp_beds),0))
#beds
#tot_recov <- all_countries %>%
#  summarize(tots = sum(recovered, na.rm = TRUE))
#tot_recov
#mhb <- max_beds = replace_na(max(all_countries$hosp_beds),0)
#nor <- sum(all_countries$recovered, na.rm = TRUE)
recov_bed <- all_countries %>%
group_by(iso_alpha_3)
recov_bed
#ggplot(data = all_countries, mapping = aes(x = mhb, y = nor)) +
# geom_point()
# Type your code here
selected_cols <- all_countries %>%
select(id, date, recovered, hosp_beds)
selected_cols
#ggplot(data = all_countries, mapping = aes(x = mhb, y = nor)) +
# geom_point()
# Type your code here
selected_cols <- all_countries %>%
summarise(tot_recov=sum(recovered, na.rm = TRUE))
select(id, date, tot_recov, hosp_beds)
# Type your code here
selected_cols <- all_countries %>%
summarise(tot_recov=sum(recovered, na.rm = TRUE))
select(id, date, recovered, hosp_beds)
# Type your code here
selected_cols <- all_countries %>%
select(id, date, recovered, hosp_beds)
selected_cols
#ggplot(data = all_countries, mapping = aes(x = mhb, y = nor)) +
# geom_point()
knitr::opts_chunk$set(echo = TRUE)
flights_no_year <- flights %>%
select(-year)
flight_arr_times <- flights %>%
select(month:day, arr_time:sched_arr_time)
library(tidyverse)
library(COVID19)
wb <- c("gdp" = "NY.GDP.MKTP.CD", "hosp_beds" = "SH.MED.BEDS.ZS")
all_countries <- covid19(wb = wb)
# NOTE: Running this block will take a long time -- be patient!
#       This will also be run when you knit your notebook,
#       so knitting will also take a few minutes
gmr <- "https://www.gstatic.com/covid19/mobility/Global_Mobility_Report.csv"
canada <- covid19(country='CAN',gmr = gmr, level=2)
# Type your code here
diff_countries <- all_countries %>%
group_by(administrative_area_level_1) %>%
count() %>%
rename(Country = administrative_area_level_1,
Frequency = n)
# Type your code here
all_countries %>%
arrange(date)
all_countries %>%
arrange(desc(date))
# Type your code here
ggplot(data = all_countries, mapping = aes(x = hosp_beds)) +
geom_histogram(bins = 60, color="white") +
geom_vline(xintercept = median(all_countries$hosp_beds, na.rm = TRUE), color="red")
median(all_countries$hosp_beds, na.rm = TRUE)
# Type your code here
dat_filter <- all_countries %>%
filter(date >= "2020-09-18")
dat_filter
View(diff_countries)
View(dat_filter)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
dat_filter
View(dat_filter)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18") %>%
sum(recovered)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18") %>%
sum_rec <- dat_filter %>%
sum(recovered)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18") %>%
sum_rec <- dat_filter %>%
sum(dat_filter$recovered)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18") %>%
sum_rec <- sum(dat_filter$recovered)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
View(sum_rec)
max_bed <- all_countries %>%
replace_na(hosp_beds, 0) %>%
max(hosp_beds)
max_bed <- all_countries %>%
replace_na(all_countries$hosp_beds, 0) %>%
max(hosp_beds)
max_bed <- replace_na(all_countries$hosp_beds, 0) %>%
max(hosp_beds)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
max_bed <- replace_na(dat_filter$hosp_beds, 0) %>%
max(hosp_beds)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
max_bed <- dat_filter %>%
summarize(max_beds = replace_na(max(hosp_beds), 0))
View(max_bed)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
max_bed <- dat_filter %>%
summarize(max_beds = replace_na(max(hosp_beds), 0))
ggplot(dat_filter, mapping = aes(max_bed, sum_rec)) +
geom_point()
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
max_bed <- dat_filter %>%
summarize(max_beds = replace_na(max(hosp_beds), 0))
ggplot(dat_filter, mapping = aes(x = max_bed, y = sum_rec)) +
geom_point()
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
max_bed <- dat_filter %>%
summarize(max_beds = replace_na(max(hosp_beds), 0))
ggplot(data = dat_filter, mapping = aes(x = max_bed, y = sum_rec)) +
geom_point()
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- (dat_filter$recovered, na.rm = TRUE)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- (dat_filter$recovered na.rm = TRUE)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- dat_filter$recovered na.rm = TRUE
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
max_bed <- dat_filter %>%
summarize(max_beds = replace_na(max(hosp_beds), 0))
ggplot(data = dat_filter, mapping = aes(x = max_bed, y = sum_rec)) +
geom_point()
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-19")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
max_bed <- dat_filter %>%
summarize(max_beds = replace_na(max(hosp_beds), 0))
ggplot(data = dat_filter, mapping = aes(x = max_bed, y = sum_rec)) +
geom_point()
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
max_bed <- dat_filter %>%
summarize(max_beds = replace_na(max(hosp_beds), 0))
ggplot(data = dat_filter, mapping = aes(x = max_bed, y = sum_rec)) +
geom_point()
View(max_bed)
# Type your code here
dat_filter <- all_countries %>%
filter(date == "2020-09-18")
sum_rec <- sum(dat_filter$recovered, na.rm = TRUE)
max_bed <- dat_filter %>%
summarize(max_beds = replace_na(max(hosp_beds), 0))
ggplot(data = dat_filter, mapping = aes(x = max_bed, y = sum_rec)) +
geom_point()
MY_UNIQNAME = "mgarvin"
# Initial setup for our environment
library(tidyverse)
library(ggplot2)
# Reading the file in from your working directory
data <- read_csv('bgg_2018.csv')
View(data)
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), md = median(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), md = median(geek_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..scale..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(median=median(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(median=median(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(geek_rating), sd = sd(geek_rating))))
avg_mean <- data %>%
mean(avg_rating)
geek_mean <- data %>%
mean(geek_rating)
avg_median <- data %>%
median(avg_rating)
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(geek_rating), sd = sd(geek_rating))))
avg_mean <- data %>%
mean(avg_rating)
geek_mean <- data %>%
mean(geek_rating)
avg_median <- median(data$avg_rating)
geek_median <- median(data$geek_rating)
sprintf("Median Weight: %1.4f, Median Height: %1.4f", weight_median, height_median)
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=avg_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(avg_rating), sd = sd(avg_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=mean(geek_rating), sd = sd(geek_rating))))
ggplot(data, mapping=aes(x=geek_rating)) +
geom_histogram(aes(y = ..density..), bins = 15, fill="blue") +
stat_function(fun=dnorm, args=with(data, c(mean=median(geek_rating), sd = sd(geek_rating))))
avg_mean <- mean(data$avg_rating)
geek_mean <- mean(data$geek_rating)
avg_median <- median(data$avg_rating)
geek_median <- median(data$geek_rating)
sprintf("Average Rating Median: %1.4f, Geek Rating Median: %1.4f", avg_median, geek_median)
sprintf("Average Rating Mean: %1.4f, Geek Rating Mean: %1.4f", avg_mean, geek_mean)
clean_df <- data %>%
select(-c(bgg_url, game_id, image_url))
View(clean_df)
clean_df <- data %>%
select(-c(bgg_url, game_id, image_url))
top_500 <- clean_df %>%
select(rank == 1:500)
clean_df <- data %>%
select(-c(bgg_url, game_id, image_url))
top_500 <- clean_df %>%
filter(rank == 1:500)
View(top_500)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- pivot_wider(top_500$avg_rating)
View(top_500)
player_count <- top_500 %>%
summarise(mean(avg_rating)
player_count <- top_500 %>%
player_count <- top_500 %>%
summarise(mean = mean(avg_rating))
View(player_count)
player_count <- top_500 %>%
summarise(mean = mean(avg_rating), pivot_wider(avg_rating))
player_count <- top_500 %>%
summarise(mean = mean(avg_rating), pivot_wider(c(min(avg_rating), max(avg_rating)))
View(player_count)
View(player_count)
spread <- pivot_wider(c(min(avg_rating), max(avg_rating)))
spread <- quantile(top_500$avg_rating)
spread <- range(top_500$avg_rating)
View(data)
View(spread)
spread <- sd(top_500$avg_rating)
number_per_max_player <- count(top_500$max_players)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
View(number_per_max_player)
player_count <- top_500 %>%
summarise(mean = mean(avg_rating), sd(avg_rating), count(max_players))
player_count <- top_500 %>%
summarise(mean(avg_rating), sd(avg_rating), count(max_players))
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %1.4f", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %1.4f", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
View(number_per_max_player)
df_player_counts <- tibble(
avg_rating = mean(top_500$avg_rating),
spread = sd(top_500$avg_rating),
games_per_max_player_count = top_500 %>%
group_by(max_players) %>%
count(max_players)
)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %1.4f", avg_avg_rating, spread, number_per_max_player)
View(df_player_counts)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
View(number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %f", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: f", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %f", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %a", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %d", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %x", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %s", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %1.f", avg_avg_rating, spread, number_per_max_player)
avg_avg_rating <- mean(top_500$avg_rating)
spread <- sd(top_500$avg_rating)
number_per_max_player <- top_500 %>%
group_by(max_players) %>%
count(max_players)
sprintf("Average Rating: %1.4f, Spread: %1.4f, Number of Games Per Max Player Count: %1f", avg_avg_rating, spread, number_per_max_player)
